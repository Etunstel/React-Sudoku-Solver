{"version":3,"sources":["index.js"],"names":["Square","evt","txt","target","value","this","props","onChange","row","col","match","val","_this","react__WEBPACK_IMPORTED_MODULE_7___default","a","createElement","type","autoComplete","className","validateInput","React","Component","Board","i","j","key","board","rows","squares","push","renderSquare","unsolvable","solved","createCells","Game","_this2","Object","D_Libraries_Documents_GitHub_react_sudoku_solver_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","D_Libraries_Documents_GitHub_react_sudoku_solver_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__","D_Libraries_Documents_GitHub_react_sudoku_solver_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__","call","state","Array","fill","map","status","handleCellChange","bind","D_Libraries_Documents_GitHub_react_sudoku_solver_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_1__","newBoard","slice","parseInt","setState","clone","o","D_Libraries_Documents_GitHub_react_sudoku_solver_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","validSudoku","validPlacement","solution","solveBoard","x","test","_this3","currentBoard","onClick","attemptSolve","reset","getCornerVal","index","length","rowContains","colContains","cornerRow","cornerCol","y","boxContains","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.00fb489c.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\n\nclass Square extends React.Component {\n\n\tvalidateInput(evt) {\n\t\tlet txt = evt.target.value;\n\n\t\tif(txt===\"\") {\n\t\t\tthis.props.onChange(this.props.row, this.props.col, txt)\n\t\t} else {\n\t\t\tif(txt.match(/^\\d$/))\n\t\t\t\tthis.props.onChange(this.props.row, this.props.col, txt)\n\t\t\telse\n      \t\t\tthis.props.onChange(this.props.row, this.props.col, this.props.val)\n\t\t}\n\t}\n\n  render() {\n    return (\n      <input\n      type=\"text\"\n      autoComplete=\"off\"\n      value = { this.props.val === 0 ? \"\" : \"\"+this.props.val}\n      className=\"square\"\n      onChange = {(evt)=> this.validateInput(evt)}>\n      </input>\n    );\n  }\n}\n\nclass Board extends React.Component {\n\n  renderSquare(i, j,  val) {\n    return <Square\n    className = \"sudoku-cell\"\n    key = {(9*i+j)}\n    val = {val}\n    onChange = {this.props.onChange}\n    row = {i}\n    col = {j}\n    />;\n  }\n\n\n  createCells(board){\n  \tlet rows = [];\n\n  \tfor(var i = 0; i< 9; i++){\n  \t\tlet squares = [];\n  \t\tfor(var j = 0; j< 9; j++){\n  \t\t\tsquares.push(this.renderSquare(i, j , this.props.board[i][j] ));\n  \t\t}\n  \t\trows.push(<div className = \"sudoku-row\" key = {i}>{squares}</div>);\n  \t}\n  \treturn rows;\n  }\n\n  render() {\n\n    return (\n      <div className = {\n      \tthis.props.unsolvable? \"sudoku-board unsolvable\" :\n      \tthis.props.solved? \"sudoku-board solved\" : \"sudoku-board\"}>\n      {this.createCells(this.props.board)}\n      </div>\n      );\n  }\n}\n\nclass Game extends React.Component {\n\n\tconstructor(props){\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\tboard : Array(9).fill().map(() => Array(9).fill(0)),\n\t\t\tsolved: false,\n\t\t\tunsolvable: false,\n\t\t\tstatus: \"Enter a sudoku...\"\n\t\t}\n\t\tthis.handleCellChange = this.handleCellChange.bind(this);\n\t}\n\n\thandleCellChange(row, col, val){\n\n\t\tconst newBoard = this.state.board.slice();\n\n\t\tnewBoard[row][col] = (val===\"\") ? 0: parseInt(val, 10);\n\n\t\tthis.setState({\n\t\t\tboard: newBoard,\n\t\t\tsolved: false,\n\t\t\tunsolvable: false,\n\t\t\tstatus: \"Enter a sudoku...\"\n\t\t});\n\t}\n\n\treset(){\n\t\tthis.setState({\n\t\t\tboard : Array(9).fill().map(() => Array(9).fill(0)),\n\t\t\tsolved: false,\n\t\t\tunsolvable: false,\n\t\t\tstatus: \"Enter a sudoku...\"\n\t\t});\n\t}\n\n\tattemptSolve(){\n\t\tif(this.state.solved) return;\n\n\t\tlet clone = this.state.board.map(o => [...o]);\n\n\t\tif(validSudoku(clone, 0, 0)){\n\t\t\tlet solution = solveBoard(clone, 0, 0);\n\n\t\t\tif(solution){\n\t\t\t\tthis.setState({\n\t\t\t\t\tboard:solution,\n\t\t\t\t\tsolved : true,\n\t\t\t\t\tunsolvable: false,\n\t\t\t\t\tstatus: \"Solved!\"\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.setState({\n\t\t\t\t\tboard: this.state.board.map(o => [...o]),\n\t\t\t\t\tsolved : false,\n\t\t\t\t\tunsolvable: true,\n\t\t\t\t\tstatus: \"No solution exists :/\"\n\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\tthis.setState({\n\t\t\t\t\tboard: this.state.board.map(o => [...o]),\n\t\t\t\t\tsolved : false,\n\t\t\t\t\tunsolvable: true,\n\t\t\t\t\tstatus: \"No solution exists :/\"\n\t\t\t});\n\t\t}\n\n\n\t}\n\n  render() {\n  \tconst currentBoard = this.state.board;\n\n    return (\n\n      <div className=\"game\">\n      \t<div className = \"game-header\"> <h1> Sudoku! </h1></div>\n\n        <div className=\"game-board\">\n          <Board board = {currentBoard}\n          solved = {this.state.solved}\n          unsolvable = {this.state.unsolvable}\n          onChange = {this.handleCellChange}/>\n        </div>\n\n        <div className=\"game-info\">\n          <div className = \"status\">{this.state.status}</div>\n        </div>\n\n        <div className = \"buttons\">\n        <button className = \"solve-button\" onClick= {() => this.attemptSolve()}> Solve</button>\n        <button className = \"reset-button\" onClick= {() => this.reset()}> Reset</button>\n        </div>\n\n      </div>\n    );\n  }\n}\n\n\n// ======================================== SOLVER ===========================================\n\nfunction rowContains(board, i, x, val){\n\tfor(var j = 0; j< board[0].length; j++)\n\t\tif(j!==x && board[i][j]===val)\n\t\t\treturn true;\n\treturn false;\n}\n\nfunction colContains(board, x, j, val){\n\tfor(var i = 0; i< board.length; i++)\n\t\tif(i!==x && board[i][j]===val)\n\t\t\treturn true;\n\treturn false;\n}\n\nfunction getCornerVal (index) {\n\tif(index<3)\n\t\treturn 0;\n\telse if(index<6)\n\t\treturn 3;\n\telse\n\t\treturn 6;\n}\n\nfunction boxContains(board, i, j, val){\n\tconst cornerRow = getCornerVal(i);\n\tconst cornerCol = getCornerVal(j);\n\n\tfor(var x = cornerRow; x<cornerRow+3; x++){\n\t\tfor(var y = cornerCol; y<cornerCol+3; y++){\n\t\t\tif(x===i && y===j) continue;\n\t\t\tif(board[x][y]===val)\n\t\t\t\treturn true;\n\t\t}\n\t}\n\n\treturn false;\n}\n\n\nfunction validPlacement(board, i, j, val){\n\treturn !rowContains(board, i, j, val) && !colContains(board, i, j, val) && !boxContains(board, i, j, val);\n}\n\n\nfunction solveBoard(board, i, j){\n\n\tif(board[i][j]>0){\n\t\tif(i===8 && j===8)\n\t\t\treturn board;\n\t\telse if(j===8)\n\t\t\treturn solveBoard(board, i+1, 0);\n\t\telse\n\t\t\treturn solveBoard(board, i, j+1);\n\t}\n\n\tlet x = null;\n\n\tfor(var test = 1; test<=9; test++){\n\t\tif(validPlacement(board, i, j, test)){\n\n\t\t\tboard[i][j] = test;\n\n\t\t\tif(i===8 && j===8)\n\t\t\t\tx = board;\n\t\t\telse if(j===8)\n\t\t\t\tx = solveBoard(board, i+1, 0);\n\t\t\telse\n\t\t\t\tx = solveBoard(board, i, j+1);\n\n\t\t\tif(x)\n\t\t\t\treturn x;\n\t\t\telse\n\t\t\t\tboard[i][j] = 0;\n\t\t}\n\t}\n\treturn x;\n}\n\nfunction validSudoku(board, i, j){\n\tif(board[i][j]>0){\n\t\tif(!validPlacement(board, i, j, board[i][j])) return false;\n\t}\n\n\tif(i===8 && j===8)\n\t\treturn true;\n\telse if(j===8)\n\t\treturn validSudoku(board, i+1, 0);\n\telse\n\t\treturn validSudoku(board, i, j+1);\n}\n\n\n// ========================================\n\nReactDOM.render(\n  <Game />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}